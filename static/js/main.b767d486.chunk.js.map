{"version":3,"sources":["FormValidation.js","Login.js","Nav.js","Welcome.js","Register.js","App.js","serviceWorker.js","index.js"],"names":["validateForm","event","state","inputs","document","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","username","getElementById","add","blankfield","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","passwordmatch","Login","errors","cognito","clearErrorState","setState","handleSubmit","a","preventDefault","error","Validate","Auth","signIn","user","console","log","props","history","push","err","message","onInputChange","target","id","value","usercheck","onSubmit","this","type","placeholder","onChange","Component","Nav","to","Welcome","Register","signUp","attributes","signUpResponse","Home","App","path","exact","component","Boolean","window","location","hostname","match","Amplify","configure","mandotorySignIn","region","config","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b767d486.chunk.js","sourcesContent":["\r\n\r\n\r\nfunction validateForm(event, state) {\r\n    // clear all error messages\r\n    const inputs = document.getElementsByClassName(\"is-danger\");\r\n    for (let i = 0; i < inputs.length; i++) {\r\n      if (!inputs[i].classList.contains(\"error\")) {\r\n        inputs[i].classList.remove(\"is-danger\");\r\n      }\r\n    }\r\n  \r\n    if (state.hasOwnProperty(\"username\") && state.username === \"\") {\r\n      document.getElementById(\"username\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\r\n      document.getElementById(\"firstname\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\r\n      document.getElementById(\"lastname\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"email\") && state.email === \"\") {\r\n      document.getElementById(\"email\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (\r\n      state.hasOwnProperty(\"verificationcode\") &&\r\n      state.verificationcode === \"\"\r\n    ) {\r\n      document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"password\") && state.password === \"\") {\r\n      document.getElementById(\"password\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\r\n      document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\r\n      document.getElementById(\"newpassword\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\r\n      document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\r\n      return { blankfield: true };\r\n    }\r\n    if (\r\n      state.hasOwnProperty(\"password\") &&\r\n      state.hasOwnProperty(\"confirmpassword\") &&\r\n      state.password !== state.confirmpassword\r\n    ) {\r\n      document.getElementById(\"password\").classList.add(\"is-danger\");\r\n      document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\r\n      return { passwordmatch: true };\r\n    }\r\n    if (\r\n      state.hasOwnProperty(\"newpassword\") &&\r\n      state.hasOwnProperty(\"confirmpassword\") &&\r\n      state.newpassword !== state.confirmpassword\r\n    ) {\r\n      document.getElementById(\"newpassword\").classList.add(\"is-danger\");\r\n      document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\r\n      return { passwordmatch: true };\r\n    }\r\n    return;\r\n  }\r\n  \r\n  export default validateForm;","import React, { Component } from \"react\";\r\nimport Validate from \"./FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\n\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        errors: {\r\n            cognito: null,\r\n            blankfield: false\r\n        }\r\n    }\r\n\r\n    clearErrorState = () => {\r\n        this.setState({\r\n          errors: {\r\n            cognito: null,\r\n            blankfield: false,\r\n          }\r\n        });\r\n      }\r\n\r\n      handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.clearErrorState();\r\n        const error = Validate(event, this.state);\r\n        if (error) {\r\n            this.setState({\r\n                 errors: { ...this.state.errors, ...error }\r\n            });\r\n        }\r\n        \r\n        try{\r\n            const user = await Auth.signIn(this.state.username, this.state.password);\r\n            console.log(\"cool\");\r\n             console.log(user);\r\n            this.props.history.push(\"/\");\r\n        }\r\n        catch(error){\r\n            let err = null;\r\n            !error.message ? err = {\"message\": error} : err = error;\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    cognito: err\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n      onInputChange = event =>    {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n        const usercheck = this.state.username;\r\n        console.log(usercheck);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                <input \r\n                        type = \"text\"\r\n                        placeholder = \"username\"\r\n                        id = \"username\" \r\n                        value = {this.state.username}\r\n                        onChange = {this.onInputChange}/>\r\n                        \r\n                        <input\r\n                        type = \"password\" \r\n                        placeholder = \"password\"\r\n                        id = \"password\" \r\n                        value = {this.state.password}\r\n                        onChange = {this.onInputChange}/>\r\n                        \r\n                        <button>log in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n function Nav(){\r\n     return(\r\n         <nav>\r\n             <h1>iqublog</h1>\r\n             <ul>\r\n                 <Link to = \"/Register\">\r\n                 <li>Register</li>\r\n                 </Link>\r\n                \r\n                 <Link to = \"/Login\">\r\n                 <li>log in</li>\r\n                 </Link>\r\n             </ul>\r\n         </nav>\r\n     );\r\n }\r\nexport default Nav;","import React from 'react';\r\n\r\nexport default function Welcome() {\r\n  return (\r\n    <section >\r\n      <div >\r\n        <h1>Welcome!</h1>\r\n        <p>You have successfully registered a new account.</p>\r\n      </div>\r\n    </section>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport Validate from \"./FormValidation\";\r\nimport Welcome from \"./Welcome\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\n\r\nclass Register extends Component{\r\n    state = {\r\n        username: \"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmpassword:\"\",\r\n        errors: {\r\n            cognito: null,\r\n            blankfield: false,\r\n            passwordmatch: false\r\n        }\r\n    }\r\n    \r\n    clearErrorState = () => {\r\n        this.setState({\r\n          errors: {\r\n            cognito: null,\r\n            blankfield: false,\r\n            passwordmatch: false\r\n          }\r\n        });\r\n      }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.clearErrorState();\r\n        const error = Validate(event, this.state);\r\n        if (error) {\r\n            this.setState({\r\n                 errors: { ...this.state.errors, ...error }\r\n            });\r\n        }\r\n        const { username, email, password } = this.state;\r\n        try{\r\n            const signUpResponse = await Auth.signUp({\r\n                username,\r\n                password,\r\n                attributes:{\r\n                    email: email\r\n                }\r\n            });\r\n            console.log(\"cool\");\r\n             console.log(signUpResponse);\r\n            this.props.history.push(\"/Welcome\");\r\n        }\r\n        catch(error){\r\n            let err = null;\r\n            !error.message ? err = {\"message\": error} : err = error;\r\n            this.setState({\r\n                errors: {\r\n                    ...this.state.errors,\r\n                    cognito: err\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onInputChange = event =>    {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n        const usercheck = this.state.username;\r\n        console.log(usercheck);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <input \r\n                    type = \"text\"\r\n                    placeholder = \"username\"\r\n                    id = \"username\" \r\n                    value = {this.state.username}\r\n                    onChange = {this.onInputChange}/>\r\n                    \r\n                    <input\r\n                    type = \"text\" \r\n                    placeholder = \"email\"\r\n                    id = \"email\" \r\n                    value = {this.state.email}\r\n                    onChange = {this.onInputChange}/>\r\n                    \r\n                    <input \r\n                    type = \"password\"\r\n                    placeholder = \"password\"\r\n                    id = \"password\"\r\n                    value = {this.state.password}\r\n                    onChange = {this.onInputChange} />\r\n                    \r\n                    <input \r\n                    type = \"password\"\r\n                    placeholder = \"confirm password\"\r\n                    id = \"confirmpassword\" \r\n                    value = {this.state.confirmpassword}\r\n                    onChange = {this.onInputChange}/>\r\n                    \r\n                    <button>register</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Nav from './Nav';\nimport Register from \"./Register\";\nimport Welcome from \"./Welcome\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport { Auth } from 'aws-amplify';\n\nfunction App(){\n  return(\n    <div>\n      <Router>\n      <Nav></Nav>\n      <switch>\n      <Route path=\"/\" exact component ={Home}/>\n      <Route path=\"/login\" component ={Login}/>\n      <Route path=\"/Register\" component ={Register}/>\n      <Route path=\"/Welcome\" component = {Welcome}/>\n      </switch>\n      </Router>\n      \n    </div>\n  );\n}\nconst Home = () => {\n  return <div>\n    <h1>Homepage</h1>\n  </div>\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\nAmplify.configure({\n  Auth: {\n    mandotorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  }\n}\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}